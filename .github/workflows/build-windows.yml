name: build-windows

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'python-sidecar/**'
      - 'src-tauri/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/build-windows.yml'
  pull_request:
    paths:
      - 'python-sidecar/**'
      - 'src-tauri/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/build-windows.yml'

jobs:
  build:
    runs-on: windows-latest

    env:
      NODE_VERSION: '20'
      PYTHON_VERSION: '3.11'
      RUST_TOOLCHAIN: 'stable'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies and build sidecar
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller rembg pillow opencv-python-headless numpy
          python - <<'PY'
            import os
            import shutil
            import sys

            model_dir = os.path.join('python-sidecar', 'models')
            os.makedirs(model_dir, exist_ok=True)

            from rembg.session_factory import new_session

            session = new_session('u2net')
            model_path = getattr(session, 'model_path', None)
            if not model_path or not os.path.exists(model_path):
                raise SystemExit('u2net model not found after download')

            target = os.path.join(model_dir, 'u2net.onnx')
            if os.path.abspath(model_path) != os.path.abspath(target):
                shutil.copy2(model_path, target)
          PY
          python -m PyInstaller --clean --onefile -n python-sidecar python-sidecar\main.py
          copy python-sidecar\dist\python-sidecar.exe python-sidecar\python-sidecar.exe

      - name: Install npm dependencies
        run: npm ci

      - name: Set up Rust ${{ env.RUST_TOOLCHAIN }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Build Tauri (Windows x86_64)
        run: npm run tauri build -- --target x86_64-pc-windows-msvc

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuriemon-windows-bundle
          path: src-tauri/target/x86_64-pc-windows-msvc/release/bundle
